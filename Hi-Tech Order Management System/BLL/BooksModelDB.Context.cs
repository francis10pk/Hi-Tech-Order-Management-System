//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hi_Tech_Order_Management_System.BLL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    
    public partial class BooksDBEntities : DbContext
    {
        public BooksDBEntities()
            : base("name=BooksDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            //throw new UnintentionalCodeFirstException();
            modelBuilder.Entity<OrderLine>()
            .HasKey(eo => new { eo.EmployeeID, eo.OrderID });

            modelBuilder.Entity<OrderLine>()
                    .HasRequired(o => o.Status)  
                    .WithMany(o => o.OrderLines)             
                    .HasForeignKey(o => o.StatusID)
                    .WillCascadeOnDelete(true);
            modelBuilder.Entity<OrderLine>()
                    .HasRequired(ol => ol.Employee)         // OrderLine has required Employee
                    .WithMany(e => e.OrderLines)            // Employee can have many OrderLines
                    .HasForeignKey(ol => ol.EmployeeID)     // Foreign key property in OrderLine
                    .WillCascadeOnDelete(true);
             modelBuilder.Entity<OrderLine>()
                   .HasRequired(ol => ol.Order)            // OrderLine has required Order
                   .WithMany(o => o.OrderLines)            // Order can have many OrderLines
                   .HasForeignKey(ol => ol.OrderID)        // Foreign key property in OrderLine
                   .WillCascadeOnDelete(true);

            modelBuilder.Entity<AuthorBook>()
            .HasKey(ab => new { ab.AuthorId, ab.Isbn });

                modelBuilder.Entity<AuthorBook>()
                    .HasRequired(ab => ab.Author)
                    .WithMany(a => a.AuthorBooks)
                    .HasForeignKey(ab => ab.AuthorId)
                    .WillCascadeOnDelete(true);

                modelBuilder.Entity<AuthorBook>()
                    .HasRequired(ab => ab.Book)
                    .WithMany(b => b.AuthorBooks)
                    .HasForeignKey(ab => ab.Isbn)
                    .WillCascadeOnDelete(true);
        }
    
        public virtual DbSet<Author> Authors { get; set; }
        public virtual DbSet<Book> Books { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Job> Jobs { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<OrderLine> OrderLines { get; set; }
        public virtual DbSet<Publisher> Publishers { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<UserAccount> UserAccounts { get; set; }
        public virtual DbSet<AuthorBook> AuthorBooks { get; internal set; }
    }
}
